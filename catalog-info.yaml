# Petstore API
apiVersion: backstage.io/v1alpha1
kind: API
metadata:
  name: petstore
  description: Example Petstore API (OpenAPI v3)
  tags:
    - openapi
    - example
spec:
  type: openapi
  lifecycle: production
  owner: team-a
  definition:
    $text: https://petstore.swagger.io/v2/swagger.json

---

# Databricks Workspace API
apiVersion: backstage.io/v1alpha1
kind: API
metadata:
  name: databricks-workspace-api
  description: Databricks Workspace REST API
  tags:
    - databricks
    - rest
spec:
  type: openapi
  lifecycle: production
  owner: data-platform-team
  definition: |
    openapi: 3.0.0
    info:
      title: Databricks Workspace API
      version: 1.0.0
      description: Databricks REST API example
    servers:
      - url: https://dbc-77023c7b-6c91.cloud.cloud.databricks.com/api/2.0
    paths:
      /clusters/list:
        get:
          summary: List clusters
          security:
            - BearerAuth: []
          responses:
            '200':
              description: List of clusters
      /jobs/list:
        get:
          summary: List jobs
          security:
            - BearerAuth: []
          responses:
            '200':
              description: List of jobs
    components:
      securitySchemes:
        BearerAuth:
          type: http
          scheme: bearer
          bearerFormat: PAT
# OpenAI API
  apiVersion: backstage.io/v1alpha1
  kind: API
  metadata:
    name: openai-api
    description: OpenAI REST API for GPT and other AI models
    tags:
      - openai
      - rest
      - ai
  spec:
    type: openapi
    lifecycle: production
    owner: data-platform-team
    definition: |
      openapi: 3.0.1
      info:
        title: OpenAI API
        version: 1.0.0
        description: REST API for OpenAI models (ChatGPT, DALLÂ·E, embeddings, etc.)
      servers:
        - url: https://api.openai.com/v1
      paths:
        /models:
          get:
            summary: List available models
            security:
              - BearerAuth: []
            responses:
              '200':
                description: List of models
        /completions:
          post:
            summary: Create a text completion
            security:
              - BearerAuth: []
            requestBody:
              required: true
              content:
                application/json:
                  schema:
                    type: object
                    properties:
                      model:
                        type: string
                      prompt:
                        type: string
                      max_tokens:
                        type: integer
            responses:
              '200':
                description: Completion result
        /chat/completions:
          post:
            summary: Create a chat completion
            security:
              - BearerAuth: []
            requestBody:
              required: true
              content:
                application/json:
                  schema:
                    type: object
                    properties:
                      model:
                        type: string
                      messages:
                        type: array
                        items:
                          type: object
                          properties:
                            role:
                              type: string
                            content:
                              type: string
            responses:
              '200':
                description: Chat completion result
      components:
        securitySchemes:
          BearerAuth:
            type: http
            scheme: bearer
            bearerFormat: API_KEY